# Generated by Django 4.2.7 on 2023-11-30 08:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('profile', models.IntegerField(default=0, verbose_name='Initial profile steps')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, verbose_name='Question text')),
                ('question_type', models.IntegerField(default='1', verbose_name='Question type')),
                ('answer1', models.CharField(max_length=200, verbose_name='Answer 1')),
                ('answer2', models.CharField(max_length=200, verbose_name='Answer 2')),
                ('answer3', models.CharField(max_length=200, verbose_name='Answer 3')),
                ('answer4', models.CharField(max_length=200, verbose_name='Answer 4')),
                ('correct_answer', models.IntegerField(verbose_name='Correct answer')),
                ('question_number', models.IntegerField(default='0', verbose_name='Question number')),
            ],
            options={
                'verbose_name_plural': 'Question',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Quiz title')),
                ('title_url', models.CharField(max_length=255, verbose_name='Quiz title URL')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Quiz description')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured status')),
                ('private', models.BooleanField(default=False, verbose_name='Private: password required')),
                ('authur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Quiz',
            },
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Theme name')),
                ('text', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Cover image text')),
                ('image', models.ImageField(blank=True, null=True, upload_to='covers/')),
                ('status', models.BooleanField(default=False, unique=True, verbose_name='Active status')),
            ],
            options={
                'verbose_name_plural': 'Themes',
            },
        ),
        migrations.CreateModel(
            name='TeamNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Team name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_names', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'TeamNames',
            },
        ),
        migrations.CreateModel(
            name='TeamMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Member name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'TeamMembers',
            },
        ),
        migrations.CreateModel(
            name='QuizInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_name', models.TextField(blank=True, max_length=50, null=True, verbose_name='Custom name')),
                ('quiz_step', models.IntegerField(default='0', verbose_name='step')),
                ('question_number', models.IntegerField(default='1', verbose_name='Question number')),
                ('password', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Password')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz')),
            ],
            options={
                'verbose_name_plural': 'QuizInstance',
            },
        ),
        migrations.CreateModel(
            name='QuestionStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.BooleanField(default=False, verbose_name='Step')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question')),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quizinstance')),
            ],
            options={
                'verbose_name_plural': 'QuestionStep',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, verbose_name='Points')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quizinstance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Participant',
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_type', models.IntegerField(default='0', verbose_name='Answer type')),
                ('question_step', models.IntegerField(default='1', verbose_name='Question_step')),
                ('given_answer', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Given answer')),
                ('points_awarded', models.IntegerField(default='0', verbose_name='Points awarded')),
                ('verification', models.BooleanField(default=True, verbose_name='Verification needed')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.participant')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question')),
            ],
            options={
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('quiz', 'question_number')},
        ),
    ]
